# docker-compose.yml

#version: '3.8'


services:
  backend:
    container_name: backend
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:17.0
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superuser -d db_transcendance"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    #ports:
      #- "3000:80"
    networks:
      - app-network
    volumes:
      - frontend_build:/app/dist

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "8080:80"
      - "8443:443"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - app-network
    volumes:
      - frontend_build:/usr/share/nginx/html


volumes:
  postgres_data:
  frontend_build:

networks:
  app-network:
    driver: bridge
